# HTTP-only configuration for development and production
# No HTTPS/TLS - plain HTTP only

:80 {
    # CORS headers for Flutter frontend
    header {
        Access-Control-Allow-Origin "*"
        Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
        Access-Control-Allow-Headers "Content-Type, Authorization, Accept"
        Access-Control-Allow-Credentials "true"
        X-Content-Type-Options "nosniff"
        X-Frame-Options "SAMEORIGIN"
        X-XSS-Protection "1; mode=block"
    }

    # Handle preflight OPTIONS requests
    @options {
        method OPTIONS
    }
    handle @options {
        header Access-Control-Allow-Origin "*"
        header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
        header Access-Control-Allow-Headers "Content-Type, Authorization, Accept"
        header Access-Control-Max-Age "86400"
        respond 200
    }

    # API endpoints - must come first
    handle /api/* {
        reverse_proxy goapp:3000 {
            header_up Host {host}
            header_up X-Real-IP {remote_host}
            header_up X-Forwarded-For {remote_host}
            header_up X-Forwarded-Proto "http"
        }
    }

    # Swagger documentation
    handle /swagger/* {
        reverse_proxy goapp:3000 {
            header_up Host {host}
            header_up X-Real-IP {remote_host}
            header_up X-Forwarded-For {remote_host}
            header_up X-Forwarded-Proto "http"
        }
    }

    # Health check endpoint
    handle /health {
        header Content-Type "text/plain"
        respond "OK - HTTP Only" 200
    }

    # Root endpoint
    handle / {
        header Content-Type "text/plain"
        respond "Corporate Portal API - Use /api/* for API endpoints, /swagger/ for documentation" 200
    }

    # Default response for unknown endpoints
    handle {
        header Content-Type "text/plain"
        respond "Endpoint not found. Available: /api/*, /swagger/*, /health" 404
    }
}
